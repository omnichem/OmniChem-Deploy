version: "3.9"

services:
  omnichem-backend-app:
    image: omnichem/omnichem_backend-app:1.1.4
    container_name: backend-app-OmniChem
    command: ./entrypoint-deploy.sh
    volumes:
      - ./staticfiles:/home/staticfiles
      - ./mediafiles:/home/mediafiles
#    ports:
#      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

  db:
    image: postgres:14-alpine
    container_name: db-postgres-OmniChem
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./dumps:/dumps
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
  
  omnibot-app:
    image: omnichem/omnichem-tg-bot:v1.1.2
    container_name: omnibot
    restart: always
    env_file:
      - .env
    depends_on:
      - db      


  omnichem-frontend-app:
    image: omnichem/omnichem-frontend-app:v1.2.3
    container_name: omnichem-frontend-app
    env_file:
      - .env
#    ports:
#      - "6688:6688"
    working_dir: /app
    tty: true

  nginx:
    image: nginx:latest
    container_name: omnichem-nginx
    restart: always
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - ./staticfiles:/home/app/web/staticfiles
      - ./mediafiles:/home/app/web/mediafiles
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - omnichem-backend-app
      - omnichem-frontend-app
    env_file:
      - .env

  metabase:
    image: metabase/metabase:latest
    container_name: omnichem-metabase
    volumes:
      - ./metabase-data:/metabase-data
      - ./omnibot_db:/omnibot_db
    ports:
      - "3333:3000"
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    depends_on:
      - db

volumes:
  postgres_data:
